<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="192736d9-b1f5-406b-a09c-83f70b08b8f8" name="jsirota@LA-JSIROTA 2011-02-08 23:43:24" runUser="INTRANET\jsirota" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="217dd782-73c8-4066-8aa7-b58d74263e98">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="jsirota_LA-JSIROTA 2011-02-08 23_43_24">
      <DeploymentItem filename="C:\Users\jsirota\Documents\Code\Ketchup\lib\SpecFlow\TechTalk.SpecFlow.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2011-02-08T23:43:24.3914248-08:00" queuing="2011-02-08T23:43:24.4214249-08:00" start="2011-02-08T23:43:24.4414249-08:00" finish="2011-02-08T23:43:25.0614258-08:00" />
  <ResultSummary outcome="Inconclusive">
    <Counters total="4" executed="4" error="0" failed="0" timeout="0" aborted="0" inconclusive="4" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="AddANewValueWhereOneExists" storage="c:\users\jsirota\documents\code\ketchup\src\ketchup\ketchup.spec\bin\debug\ketchup.spec.dll" id="8b7fc68e-94ca-66fb-73d5-f9535873c9cb">
      <Description>Add a new value where one exists</Description>
      <Execution id="156dd7ac-0666-4c51-8539-e770e3e41653" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Commands</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/jsirota/Documents/Code/Ketchup/src/Ketchup/Ketchup.Spec/bin/Debug/Ketchup.Spec.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Ketchup.Spec.Features.CommandsFeature, Ketchup.Spec, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddANewValueWhereOneExists" />
    </UnitTest>
    <UnitTest name="GetReturnsACacheMiss" storage="c:\users\jsirota\documents\code\ketchup\src\ketchup\ketchup.spec\bin\debug\ketchup.spec.dll" id="19e7c306-c3ee-2234-59e0-b81695376f6a">
      <Description>Get returns a cache miss</Description>
      <Execution id="b41e62f9-e71e-4ab1-9504-27234ad817ed" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Commands</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/jsirota/Documents/Code/Ketchup/src/Ketchup/Ketchup.Spec/bin/Debug/Ketchup.Spec.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Ketchup.Spec.Features.CommandsFeature, Ketchup.Spec, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="GetReturnsACacheMiss" />
    </UnitTest>
    <UnitTest name="AddANewValue" storage="c:\users\jsirota\documents\code\ketchup\src\ketchup\ketchup.spec\bin\debug\ketchup.spec.dll" id="75a2ca2e-adad-7ffa-cbd1-0254a7b4f94e">
      <Description>Add a new value</Description>
      <Execution id="eefcf7ee-6d6c-4608-a6c2-e600157391ec" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Commands</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/jsirota/Documents/Code/Ketchup/src/Ketchup/Ketchup.Spec/bin/Debug/Ketchup.Spec.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Ketchup.Spec.Features.CommandsFeature, Ketchup.Spec, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddANewValue" />
    </UnitTest>
    <UnitTest name="GetAnExistingValue" storage="c:\users\jsirota\documents\code\ketchup\src\ketchup\ketchup.spec\bin\debug\ketchup.spec.dll" id="f007b0e3-c8bf-c796-4305-58e398cb3b6a">
      <Description>Get an existing value</Description>
      <Execution id="9c4ff542-eb7e-4909-a22b-334d647ad1a7" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Commands</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/jsirota/Documents/Code/Ketchup/src/Ketchup/Ketchup.Spec/bin/Debug/Ketchup.Spec.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Ketchup.Spec.Features.CommandsFeature, Ketchup.Spec, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="GetAnExistingValue" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="19e7c306-c3ee-2234-59e0-b81695376f6a" executionId="b41e62f9-e71e-4ab1-9504-27234ad817ed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="75a2ca2e-adad-7ffa-cbd1-0254a7b4f94e" executionId="eefcf7ee-6d6c-4608-a6c2-e600157391ec" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8b7fc68e-94ca-66fb-73d5-f9535873c9cb" executionId="156dd7ac-0666-4c51-8539-e770e3e41653" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f007b0e3-c8bf-c796-4305-58e398cb3b6a" executionId="9c4ff542-eb7e-4909-a22b-334d647ad1a7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="b41e62f9-e71e-4ab1-9504-27234ad817ed" testId="19e7c306-c3ee-2234-59e0-b81695376f6a" testName="GetReturnsACacheMiss" computerName="LA-JSIROTA" duration="00:00:00.0784600" startTime="2011-02-08T23:43:24.4814249-08:00" endTime="2011-02-08T23:43:24.8414255-08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b41e62f9-e71e-4ab1-9504-27234ad817ed">
      <Output>
        <StdOut>Given a key
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    }

And the key is a string
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"the key is a string")]
public void GivenTheKeyIsAString()
{
    ScenarioContext.Current.Pending();
}
    }

And the key does not exist
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"the key does not exist")]
public void GivenTheKeyDoesNotExist()
{
    ScenarioContext.Current.Pending();
}
    }

When I execute Get
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [When(@"I execute Get")]
public void WhenIExecuteGet()
{
    ScenarioContext.Current.Pending();
}
    }

Then the result should be null
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Then(@"the result should be null")]
public void ThenTheResultShouldBeNull()
{
    ScenarioContext.Current.Pending();
}
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"the key does not exist")]
public void GivenTheKeyDoesNotExist()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"the key is a string")]
public void GivenTheKeyIsAString()
{
    ScenarioContext.Current.Pending();
}
    
    [Then(@"the result should be null")]
public void ThenTheResultShouldBeNull()
{
    ScenarioContext.Current.Pending();
}
    
    [When(@"I execute Get")]
public void WhenIExecuteGet()
{
    ScenarioContext.Current.Pending();
}
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Ketchup.Spec.Features.CommandsFeature.GetReturnsACacheMiss() in c:\Users\jsirota\Documents\Code\Ketchup\src\Ketchup\Ketchup.Spec\Features\Commands.feature:line 12
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eefcf7ee-6d6c-4608-a6c2-e600157391ec" testId="75a2ca2e-adad-7ffa-cbd1-0254a7b4f94e" testName="AddANewValue" computerName="LA-JSIROTA" duration="00:00:00.0119439" startTime="2011-02-08T23:43:24.8514255-08:00" endTime="2011-02-08T23:43:24.8814255-08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eefcf7ee-6d6c-4608-a6c2-e600157391ec">
      <Output>
        <StdOut>Given a key
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    }

And an value
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"an value")]
public void GivenAnValue()
{
    ScenarioContext.Current.Pending();
}
    }

And the key does not exist
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"the key does not exist")]
public void GivenTheKeyDoesNotExist()
{
    ScenarioContext.Current.Pending();
}
    }

When I execute Add
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [When(@"I execute Add")]
public void WhenIExecuteAdd()
{
    ScenarioContext.Current.Pending();
}
    }

Then no exception should be thrown
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Then(@"no exception should be thrown")]
public void ThenNoExceptionShouldBeThrown()
{
    ScenarioContext.Current.Pending();
}
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"an value")]
public void GivenAnValue()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"the key does not exist")]
public void GivenTheKeyDoesNotExist()
{
    ScenarioContext.Current.Pending();
}
    
    [Then(@"no exception should be thrown")]
public void ThenNoExceptionShouldBeThrown()
{
    ScenarioContext.Current.Pending();
}
    
    [When(@"I execute Add")]
public void WhenIExecuteAdd()
{
    ScenarioContext.Current.Pending();
}
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Ketchup.Spec.Features.CommandsFeature.AddANewValue() in c:\Users\jsirota\Documents\Code\Ketchup\src\Ketchup\Ketchup.Spec\Features\Commands.feature:line 27
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="156dd7ac-0666-4c51-8539-e770e3e41653" testId="8b7fc68e-94ca-66fb-73d5-f9535873c9cb" testName="AddANewValueWhereOneExists" computerName="LA-JSIROTA" duration="00:00:00.0139497" startTime="2011-02-08T23:43:24.8914255-08:00" endTime="2011-02-08T23:43:24.9114255-08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="156dd7ac-0666-4c51-8539-e770e3e41653">
      <Output>
        <StdOut>Given a key
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    }

And a value
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"a value")]
public void GivenAValue()
{
    ScenarioContext.Current.Pending();
}
    }

And the key already exists
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"the key already exists")]
public void GivenTheKeyAlreadyExists()
{
    ScenarioContext.Current.Pending();
}
    }

When I execute Add
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [When(@"I execute Add")]
public void WhenIExecuteAdd()
{
    ScenarioContext.Current.Pending();
}
    }

Then an exception should be thrown
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Then(@"an exception should be thrown")]
public void ThenAnExceptionShouldBeThrown()
{
    ScenarioContext.Current.Pending();
}
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"a value")]
public void GivenAValue()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"the key already exists")]
public void GivenTheKeyAlreadyExists()
{
    ScenarioContext.Current.Pending();
}
    
    [Then(@"an exception should be thrown")]
public void ThenAnExceptionShouldBeThrown()
{
    ScenarioContext.Current.Pending();
}
    
    [When(@"I execute Add")]
public void WhenIExecuteAdd()
{
    ScenarioContext.Current.Pending();
}
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Ketchup.Spec.Features.CommandsFeature.AddANewValueWhereOneExists() in c:\Users\jsirota\Documents\Code\Ketchup\src\Ketchup\Ketchup.Spec\Features\Commands.feature:line 35
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9c4ff542-eb7e-4909-a22b-334d647ad1a7" testId="f007b0e3-c8bf-c796-4305-58e398cb3b6a" testName="GetAnExistingValue" computerName="LA-JSIROTA" duration="00:00:00.0099528" startTime="2011-02-08T23:43:24.9214256-08:00" endTime="2011-02-08T23:43:24.9414256-08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9c4ff542-eb7e-4909-a22b-334d647ad1a7">
      <Output>
        <StdOut>Given a key
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    }

And and the key exists
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Given(@"and the key exists")]
public void GivenAndTheKeyExists()
{
    ScenarioContext.Current.Pending();
}
    }

When I execute Get
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [When(@"I execute Get")]
public void WhenIExecuteGet()
{
    ScenarioContext.Current.Pending();
}
    }

Then the result should be an object
-&gt; No matching step definition found for the step. Use the following code to create one:
    [Binding]
public class StepDefinitions
{
    [Then(@"the result should be an object")]
public void ThenTheResultShouldBeAnObject()
{
    ScenarioContext.Current.Pending();
}
    }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
[Binding]
public class StepDefinitions
{
    [Given(@"a key")]
public void GivenAKey()
{
    ScenarioContext.Current.Pending();
}
    
    [Given(@"and the key exists")]
public void GivenAndTheKeyExists()
{
    ScenarioContext.Current.Pending();
}
    
    [Then(@"the result should be an object")]
public void ThenTheResultShouldBeAnObject()
{
    ScenarioContext.Current.Pending();
}
    
    [When(@"I execute Get")]
public void WhenIExecuteGet()
{
    ScenarioContext.Current.Pending();
}
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Ketchup.Spec.Features.CommandsFeature.GetAnExistingValue() in c:\Users\jsirota\Documents\Code\Ketchup\src\Ketchup\Ketchup.Spec\Features\Commands.feature:line 19
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>